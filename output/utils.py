import re

def validate_python_name(sqlname):
    sqlname = re.sub(r'[^a-zA-Z0-9]', '', sqlname)
    if sqlname.isupper() == False:
        sqlname = re.sub('([A-Z]{1})', r'_\1', sqlname).lower()
        if sqlname[0] == '_':
            sqlname = sqlname[1:]
    matches = re.match(r'^[a-zA-Z_][a-zA-Z0-9_]*', sqlname)
    if matches is None or matches[0] != sqlname:
        print(f"Invalid or unsupported sqlname: {sqlname}")
        raise ValueError(f"Invalid or unsupported sqlname: {sqlname}") 
    return sqlname

def auto_mapper(type_reference, data, columns):
    columns = list(columns)
    def create_object(row):
        init_vals = {}
        for col, val in  zip(list(columns), row):
            col = validate_python_name(col)
            init_vals[col] = val
        return type_reference(**init_vals)
    
    results = list(map(create_object, data))
    return results

column_mappings = {'parameter_id': 'ParameterId', 'parameter_name': 'ParameterName', 'device_type_id': 'DeviceTypeId', 'is_required': 'IsRequired', 'model_id': 'ModelId', 'model': 'Model', 'device_id': 'DeviceId', 'tag_name': 'TagName', 'tag_value': 'TagValue', 'type_id': 'TypeId', 'type': 'Type', 'parameter_value': 'ParameterValue', 'id': 'Id', 'name': 'Name', 'ISO': 'ISO', 'ISO3': 'ISO3', 'num_code': 'NumCode', 'phone_code': 'PhoneCode', 'site_id': 'SiteId', 'site_type': 'SiteType', 'latitude': 'Latitude', 'longitude': 'Longitude', 'display_name': 'DisplayName', 'country_id': 'CountryId', 'site_type_id': 'SiteTypeId', 'timestamp': 'Timestamp', 'time': 'Time', 'its': 'Its', 'ncu_id': 'NcuId', 'spc_name': 'SpcName', 'spc_id': 'SpcId', 'duration': 'Duration', 'day_night': 'DayNight', 'plant_poa': 'PlantPoa', 'plant_ghi': 'PlantGhi', 'tracker_no_data': 'TrackerNoData', 'online': 'Online', 'last_update_minutes': 'LastUpdateMinutes', 'tracker_stow': 'TrackerStow', 'night_stow': 'NightStow', 'fault_hi': 'FaultHi', 'fault_low': 'FaultLow', 'motor_current': 'MotorCurrent', 'auto_track': 'AutoTrack', 'current_position': 'CurrentPosition', 'target_position': 'TargetPosition', 'angle_diff': 'AngleDiff', 'percent_production_factor': 'PercentProductionFactor', 'percent_production_loss_angle_diff': 'PercentProductionLossAngleDiff)', 'meter_name': 'MeterName', 'site_energy_delta': 'SiteEnergyDelta', 'active_power_count_by_its_k_w': 'ActivePowerCountByIts(KW)', 'avg_active_power_by_its_k_w': 'AvgActivePowerByIts(KW)', 'calc_energy_produced_by_its_k_w_h': 'CalcEnergyProducedByItsKWH', 'binned_energy_produced_by_its_k_w_h': 'BinnedEnergyProducedByItsKWH', 'no_energy_flag': 'NoEnergyFlag', 'energy_dur': 'EnergyDur', 'no_energy_dur': 'NoEnergyDur', 'zero_energy_dur': 'ZeroEnergyDur', 'neg_energy_dur': 'NegEnergyDur', 'non_zero_energy_dur': 'NonZeroEnergyDur', 'time_diff': 'TimeDiff', 'sys_status1': 'SysStatus1', 'sys_status2': 'SysStatus2', 'sys_status3': 'SysStatus3', 'sys_status4': 'SysStatus4', 'sys_status5': 'SysStatus5', 'sunrise': 'Sunrise', 'sunset': 'Sunset', 'record_inserted': 'RecordInserted', 'record_date': 'RecordDate', 'plant_serial': 'PlantSerial', 'inverter_id': 'InverterId', 'data_points': 'DataPoints', 'energy_kwh': 'EnergyKwh', 'theoretical_energy_kwh': 'TheoreticalEnergyKwh', 'stop_time_hrs': 'StopTimeHrs', 'stop_time_pc': 'StopTimePc', 'lost_energy_kwh': 'LostEnergyKwh', 'efficiency_kwh_kwp': 'EfficiencyKwhKwp', 'efficiency_pc': 'EfficiencyPc', 'comms_pc': 'CommsPc', 'day': 'Day', 'its_uptime_o_f_s': 'ItsUptime(OFS%)', 'its_uptime_o_f_s_a': 'ItsUptime(OFSA%)', 'no_data_sun_up': 'NoData(SunUp%)', 'dffline_sun_up': 'Dffline(SunUp%)', 'stowed_sunup': 'Stowed(Sunup%)', 'faulted_sun_up': 'Faulted(SunUp%)', 'manual_sun_up': 'Manual(SunUp%)', 'angle_delta10_deg_sun_up': 'AngleDelta10Deg(SunUp%)', 'night_stowed_total': 'NightStowed(Total%)', 'production_loss_by_angle_delta': 'ProductionLossByAngleDelta(%)', 'its_downtime_o_f_s': 'ItsDowntime(OFS%)', 'its_downtime_o_f_s_a': 'ItsDowntime (OFSA%)', 'hr_tracker_count24': '24HrTrackerCount', 'calc_expected_tracker_hrs': 'CalcExpectedTrackerHrs', 'rec_tracker_hrs': 'RecTrackerHrs', 'cal_sun_hrs': 'CalSunHrs', 'rec_sun_hrs': 'RecSunHrs', 'sun_up_no_tracker_data_hrs_n_d': 'SunUpNoTrackerDataHrs(ND)', 'sun_up_its_offline_hrs_o': 'SunUpItsOfflineHrs(O)', 'sun_up_its_manual_hrs_m': 'SunUpItsManualHrs(M)', 'sun_up_its_faulted_hrs_f': 'SunUpItsFaultedHrs(F)', 'sun_up_its_stowed_hrs_s': 'SunUpItsStowedHrs(S)', 'sun_up_its_night_stowed_hrs_n_s': 'SunUpItsNightStowedHrs(NS)', 'sun_up_its_angle_delta10deg_hrs_a': 'SunUpItsAngleDelta10degHrs(A)', 'its_downtime_hrs_o_f_s': 'ItsDowntimeHrs(OFS)', 'its_downtime_hrs_o_f_s_a': 'ItsDowntimeHrs(OFSA)', 'no_tracker_data_hrs_n_d_t': 'NoTrackerDataHrs(ND-T)', 'its_offline_hrs_o_t': 'ItsOfflineHrs(O-T)', 'its_faulted_hrs_f_t': 'ItsFaultedHrs(F-T)', 'its_stowed_hrs_s_t': 'ItsStowedHrs(S-T)', 'its_night_stowed_hrs_n_s_t': 'ItsNightStowedHrs(NS-T)\t', 'its_angle_delta10deg_hrs_a_t': 'ItsAngleDelta10degHrs(A-T)', 'sun_up_rec_energy_hrs': 'SunUpRecEnergyHrs', 'sun_up_no_energy_data_hrs_n_d_e': 'SunUpNoEnergyDataHrs(ND-E)', 'sunup_negative_energy_hrs_n_e_g_e': 'SunupNegativeEnergyHrs(NEG-E)', 'sun_up_zero_energy_hrs_z_e': 'SunUpZeroEnergyHrs(Z-E)', 'sun_up_positive_energy_hrs_p_o_s_e': 'SunUpPositiveEnergyHrs(POS-E)', 'rec_energy_hrs': 'RecEnergyHrs', 'no_energy_data_hrs_n_d_e_t': 'NoEnergyDataHrs(ND-ET)', 'negative_energy_hrs_n_e_g_e_t': 'NegativeEnergyHrs(NEG-ET)', 'zero_energy_hrs_z_e_t': 'ZeroEnergyHrs(Z-ET)', 'positive_energy_hrs_p_o_s_e_t': 'PositiveEnergyHrs(POS-ET)', 'site': 'Site', 'oem': 'Oem', 'level': 'Level', 'ncu_count': 'NcuCount', 'spc_count': 'SpcCount', 'last_seen': 'LastSeen', 'total_site_energy_delta_m_wh': 'TotalSiteEnergyDelta(MWh)', 'binned_energy_produced_by_its_k_wh': 'BinnedEnergyProducedByIts(KWh)', 'inv': 'Inv', 'serial': 'Serial', 'remarks': 'Remarks', 'fault_code': 'FaultCode', 'from_t_stamp': 'FromTStamp', 'to_t_stamp': 'ToTStamp', 'lost_kwh': 'LostKwh', 'minutes': 'Minutes', 'record_period': 'RecordPeriod', 'reference_pr_pc': 'ReferencePrPc', 'total_ir_wh_sqm': 'TotalIrWhSqm', 'production_time_hrs': 'ProductionTimeHrs', 'produced_energy_kwh': 'ProducedEnergyKwh', 'availability_pc': 'AvailabilityPc', 'grid_events_hrs': 'GridEventsHrs', 'grid_availability_pc': 'GridAvailabilityPc', 'grid_lost_energy_kwh': 'GridLostEnergyKwh', 'energy_availability_pc': 'EnergyAvailabilityPc', 'yield_pc': 'YieldPc', 'pr_pc': 'PrPc', 'rsd_pc': 'RsdPc', 'UID': 'UID', 'device_model_id': 'DeviceModelId', 'interval_in_seconds': 'IntervalInSeconds', 'is_active': 'IsActive'}